{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAXbQ,EAAAZ,GAASa,OAAOC,KAAK,CAAEC,SAAS,IAehC,MAAMC,EAAOC,SAASC,cAAc,QAEpCF,EAAKG,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBACF,IAAIC,EAAQC,OAAOP,EAAKZ,MAAMoB,OAE9B,IAAK,IAAIC,EAAI,EAAGA,GAAKT,EAAKU,OAAOF,MAAOC,GAAK,EAC3CvB,EAAcuB,EAAGH,GACdK,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBQ,EAAAZ,GAASa,OAAOe,QACd,uBAAqBzB,QAAiBC,MAAU,IAGnDyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBQ,EAAAZ,GAASa,OAAOiB,QACd,sBAAoB3B,QAAeC,MAAU,IAGnDkB,GAASC,OAAOP,EAAKe,KAAKP,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nNotiflix.Notify.init({ useIcon: false });\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  let delay = Number(form.delay.value);\n\n  for (let i = 1; i <= form.amount.value; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += Number(form.step.value);\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","init","useIcon","$47d4ff9957288465$var$form","document","querySelector","addEventListener","e","preventDefault","delay1","Number","value","i","amount","then","success","catch","failure","step"],"version":3,"file":"03-promises.91c6f525.js.map"}